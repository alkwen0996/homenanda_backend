<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.home.nanda.board.model.mapper.CommentMapper">

    <resultMap type="Comment" id="CommentMap">
        <result column="comment_id" property="commentId"/>
        <result column="article_id" property="articleId"/>
        <result column="user_id" property="userId"/>
        <result column="content" property="content"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
        <result column="delete_date" property="deletedDate"/>
    </resultMap>

    <select id="searchCommentsByArticleId" resultMap="CommentMap">
        select c.comment_id, c.article_id, b.user_id, c.content, c.created_date, c.updated_date, c.delete_date, b.type
        from comment c join board b on c.comment_id = b.article_id
        where c.article_id = #{articleId} and c.delete_date is null and b.type = 'article'
    </select>

    <insert id="registerArticleComment" parameterType="Comment">
        insert into comment (comment_id, article_id, user_id, content, created_date)
        values(#{commentId}, #{articleId}, #{userId}, #{content},now());
    </insert>

    <update id="updateArticleComment" parameterType="Comment">
        update comment
        set content = #{content}, updated_date = now()
        where comment_id = #{commentId} and article_id = #{articleId}
    </update>

    <delete id="deleteArticleComment" parameterType="String">
        delete from comment
        where comment_id = #{commentId}
    </delete>

    <select id="searchQnAByQnAId" resultMap="CommentMap">
        select c.comment_id, c.article_id, b.user_id, c.content, c.created_date, c.updated_date, c.delete_date, b.type
        from comment c join board b on c.comment_id = b.article_id
        where c.article_id = #{articleId} and c.delete_date is null and b.type = 'qna'
    </select>

</mapper>